<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>terminal on Kouler</title>
    <link>https://kouler.com/tags/terminal/</link>
    <description>Recent content in terminal on Kouler</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Wed, 06 Nov 2019 13:52:42 +0800</lastBuildDate>
    
	<atom:link href="https://kouler.com/tags/terminal/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>ZSH 环境变量失效问题</title>
      <link>https://kouler.com/posts/zsh%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F%E5%A4%B1%E6%95%88%E9%97%AE%E9%A2%98/</link>
      <pubDate>Wed, 06 Nov 2019 13:52:42 +0800</pubDate>
      
      <guid>https://kouler.com/posts/zsh%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F%E5%A4%B1%E6%95%88%E9%97%AE%E9%A2%98/</guid>
      <description>环境变量失效 默认 shell 修改为 zsh 后，.bash_profile 中的环境变量全部失效
解决方法  用户目录下创建 .zshrc 文件 将以下命令写入文件 source ~/.bash_profile  重启终端后可解决
终端用户名配置未生效 .bash_profile 中的终端用户名配置（PS1）仍未生效 export PS1=&#39;\[\033[01;36m\]\w \[\033[00m\]\$ &#39;
解决方法 解决 zsh 环境变量失效的问题后，在 .bash_profile 文件中修改 PS1 的值
## 修改前 export PS1=&#39;\[\033[01;36m\]\w \[\033[00m\]\$ &#39; # for bash ## 修改后 export PS1=&#39;%~ %(!.#.$) &#39; # for zsh 参考  环境变量怎么配置都不起作用？已经解决！一切源于 zsh zsh prompt expansion  </description>
    </item>
    
    <item>
      <title>Tmux 常用命令和快捷键</title>
      <link>https://kouler.com/posts/tmux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E5%92%8C%E5%BF%AB%E6%8D%B7%E9%94%AE/</link>
      <pubDate>Wed, 07 Aug 2019 17:43:42 +0800</pubDate>
      
      <guid>https://kouler.com/posts/tmux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E5%92%8C%E5%BF%AB%E6%8D%B7%E9%94%AE/</guid>
      <description>Tmux 命令 # 开启一个 Tmux Session $ tmux new -s name # 断开当前会话，会话在后台运行，等同于 `Ctrl + B` + `D` $ tmux detach # 查看当前 Tmux 中有哪些 Session $ tmux ls # 回到 Tmux Session 中 $ tmux a -t name（or at，or attach） # 关闭demo会话 tmux kill-session -t demo # 关闭服务器，所有的会话都将关闭 tmux kill-server Tmux 快捷键 Tmux Session 中的命令需要先按下 Tmux 前缀键（默认是 Ctrl + B）
# 会话（Session） 指令 ? # 快捷键帮助列表 d # detach，退出 Tmux Session，回到父级 Shell r # 强制重载当前会话 : # 进入命令行模式，此时可直接输入ls等命令 s # 列出所有 Session，可通过 j, k, 方向键选择，回车切换 $ # 为当前 Session 命名 # 窗口（window）指令 c # 新建 Window &amp;amp; # 关闭当前窗口 p # 切换到上一窗口 n # 切换到下一窗口 0~9 # 切换到指定 Window w # 打开窗口列表，用于且切换窗口 , # 为当前 Window 命名 .</description>
    </item>
    
    <item>
      <title>Screen 命令配置和常用操作</title>
      <link>https://kouler.com/posts/screen%E5%91%BD%E4%BB%A4%E9%85%8D%E7%BD%AE%E5%92%8C%E5%B8%B8%E7%94%A8%E6%93%8D%E4%BD%9C/</link>
      <pubDate>Wed, 10 Jul 2019 20:48:42 +0800</pubDate>
      
      <guid>https://kouler.com/posts/screen%E5%91%BD%E4%BB%A4%E9%85%8D%E7%BD%AE%E5%92%8C%E5%B8%B8%E7%94%A8%E6%93%8D%E4%BD%9C/</guid>
      <description>配置文件 该配置在screen底部状态栏显示窗口列表的名称，更易于管理会话和窗口
## ~/.screenrc ## 屏幕缓冲区4096行 defscrollback 4096 ## 下标签设置 hardstatus on hardstatus alwayslastline hardstatus string &amp;quot;%{= kw}%-w%{= kG}%{+b}[%n %t]%{-b}%{= kw}%+w %=%d %M %0c %{g}%H%{-}&amp;quot; termcapinfo rxvt &#39;hs:ts=\E]2;:fs=\007:ds=\E]2;screen\007&#39; termcapinfo xterm ti@:te@ termcapinfo xterm &#39;hs:ts=\E]2;:fs=\007:ds=\E]2;screen\007&#39; 常用操作 1screen -S name # 创建名称为 name 的会话 2screen -t name # 创建名称为 name 的窗口 3screen -ls # 显示存在的会话 4screen -r name # 唤起一个被放入后台的会话 Ctrl + a, ? # 显示所有按键绑定信息 Ctrl + a, w # 显示所有窗口列表 Ctrl + a, Ctrl + a # 切换到之前的窗口 Ctrl + a, d # 暂离当前会话，将当前会话放入后台 Ctrl + a, c # 在当前会话中创建一个新窗口 Ctrl + a, A # 为当前窗口设置名称 Ctrl + a, p # 上一个窗口 Ctrl + a, n # 下一个窗口 Ctrl + a, 0-9 # 切换到 0-9 窗口 Ctrl + a, k # 杀掉当前窗口 Ctrl + a, [ # 拷贝模式 </description>
    </item>
    
    <item>
      <title>解决 Cron 不能正常执行 Laravel 计划任务</title>
      <link>https://kouler.com/posts/%E8%A7%A3%E5%86%B3cron%E4%B8%8D%E8%83%BD%E6%AD%A3%E5%B8%B8%E8%B0%83%E7%94%A8laravel%E8%AE%A1%E5%88%92%E4%BB%BB%E5%8A%A1/</link>
      <pubDate>Tue, 14 Aug 2018 11:13:42 +0800</pubDate>
      
      <guid>https://kouler.com/posts/%E8%A7%A3%E5%86%B3cron%E4%B8%8D%E8%83%BD%E6%AD%A3%E5%B8%B8%E8%B0%83%E7%94%A8laravel%E8%AE%A1%E5%88%92%E4%BB%BB%E5%8A%A1/</guid>
      <description>在 Cron 文件中添加了以下 Laravel 任务调度命令后，发现没有正常执行，而直接在终端执行该命令是正常的
1* * * * * php /path/artisan schedule:run &amp;gt;&amp;gt; /dev/null 2&amp;gt;&amp;amp;1 在 Cron 文件中添加以下输出测试命令，也可以正常执行
1* * * * * echo 111 &amp;gt;&amp;gt; /path/test 安装 Rsyslog 后查看 Cron 日志，并没有发现任何异常，日志正常输出每一次的调度命令
然后尝试将 Laravel 任务调度命令执行结果输出到文件，修改 Cron 文件后并没有在输出文件中发现任何内容
1* * * * * php /path/artisan schedule:run &amp;gt;&amp;gt; /path/log 查看关于 Linux 中重定向相关内容后怀疑可能于此有关
 &amp;gt;&amp;gt; 输出重定向到一个文件或设备 追加原来的文件
2&amp;gt;&amp;gt; 将一个标准错误输出重定向到一个文件或设备 追加到原来的文件
 随即修改 Cron 文件，将标准错误重定向到文件
1* * * * * php /path/artisan schedule:run 2&amp;gt;&amp;gt; /path/log 文件中打印出了错误信息</description>
    </item>
    
    <item>
      <title>终端设置代理</title>
      <link>https://kouler.com/posts/%E7%BB%88%E7%AB%AF%E8%AE%BE%E7%BD%AE%E4%BB%A3%E7%90%86/</link>
      <pubDate>Fri, 09 Mar 2018 10:46:39 +0800</pubDate>
      
      <guid>https://kouler.com/posts/%E7%BB%88%E7%AB%AF%E8%AE%BE%E7%BD%AE%E4%BB%A3%E7%90%86/</guid>
      <description>设置和取消临时代理 临时代理在退出当前终端后失效
1# 设置临时 HTTP 代理 2export http_proxy=http://proxyAddress:port 3 4# 设置临时 SOCKS5 代理 5export ALL_PROXY=socks5://proxyAddress:port 6 7# SS 下的 HTTP 代理 8export http_proxy=http://127.0.0.1:1087 9 10# 取消临时代理 11unset http_proxy 12unset ALL_PROXY 参考 &amp;amp; 扩展  让终端走代理的几种方法  </description>
    </item>
    
  </channel>
</rss>