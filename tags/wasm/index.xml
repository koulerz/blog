<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>wasm on Kouler</title>
    <link>https://kouler.com/tags/wasm/</link>
    <description>Recent content in wasm on Kouler</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Sun, 26 Aug 2018 16:14:42 +0800</lastBuildDate>
    
	<atom:link href="https://kouler.com/tags/wasm/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Golang WASM Demo</title>
      <link>https://kouler.com/posts/golang-wasm-demo/</link>
      <pubDate>Sun, 26 Aug 2018 16:14:42 +0800</pubDate>
      
      <guid>https://kouler.com/posts/golang-wasm-demo/</guid>
      <description>Golang 1.11 加入了对 WebAssembly 的支持，以下会测试并运行一个简单的 Demo。
 MacOS 10.13.6 Golang 1.11 Chrome 68 (64-bit)   编写测试代码并编译为 WASM 二进制代码 编写 WebServer 代码用于正确加载本地 WASM 文件 使用 Golang 编写好的 HTML 和 JavaScript 加载 WASM 使用浏览器测试代码  编译测试代码 1// 测试代码 main.go 2package main 3 4import &amp;#34;fmt&amp;#34; 5 6func main() { 7 fmt.Println(&amp;#34;hello, Go/WASM!&amp;#34;) 8} 1# 编译命令 修改编译好的文件名称为 test.wasm 以便被自带的 HTML 文件正确加载 2$ GOOS=js GOARCH=wasm go build -o test.wasm main.go 编写 WebServer 代码 1// server.</description>
    </item>
    
  </channel>
</rss>