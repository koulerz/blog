<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>vscode on Kouler</title>
    <link>https://kouler.com/tags/vscode/</link>
    <description>Recent content in vscode on Kouler</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Mon, 13 May 2019 19:18:42 +0800</lastBuildDate>
    
	<atom:link href="https://kouler.com/tags/vscode/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>解决 VSCode 无法安装 Golang 扩展问题</title>
      <link>https://kouler.com/posts/%E8%A7%A3%E5%86%B3vscode%E6%97%A0%E6%B3%95%E5%AE%89%E8%A3%85golang%E6%89%A9%E5%B1%95%E9%97%AE%E9%A2%98/</link>
      <pubDate>Mon, 13 May 2019 19:18:42 +0800</pubDate>
      
      <guid>https://kouler.com/posts/%E8%A7%A3%E5%86%B3vscode%E6%97%A0%E6%B3%95%E5%AE%89%E8%A3%85golang%E6%89%A9%E5%B1%95%E9%97%AE%E9%A2%98/</guid>
      <description>SS 方法 1 从 SS 复制 HTTP Proxy Shell Export Line
2 设置 Shell 代理
1export http_proxy=http://127.0.0.1:1087;2export https_proxy=http://127.0.0.1:1087;3 使用 go get 方式安装
Goproxy 环境变量方法 go 1.11 版本开始新增了 goproxy 环境变量，用于下载源码时设置代理地址
1export GOPROXY=https://goproxy.io该方法依赖 go module 功能
Go module replace 方法 在 go.mod 文件中将无法安装的包路径替换为其他能够访问的包路径，比如 github 下的包路径
1module hello23require (4 golang.org/x/text v0.3.05)67# 将限制访问的 golang.org 下的地址替换为能够访问的 github 地址8replace (9 golang.org/x/text =&amp;gt; github.com/golang/text v0.3.010)由于包依赖通常比较多和杂，所以不推荐使用该方法</description>
    </item>
    
  </channel>
</rss>